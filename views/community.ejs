<body>
  <div class="app-container">
    <h1 class="heading">Latest Posts on Farmers</h1>
    <h2 class="community-byhead">KrishiSahyog!</h2>

    <div class="create-post-box">
      <h2>Create Post</h2>
      <form id="postForm">
        <input type="text" id="title" placeholder="Title of Post" required>
        <textarea id="body" placeholder="What inspiration you got from farmers today?" required></textarea>
        <input type="file" id="photo" accept="image/*">
        <button type="submit">Submit Post</button>
      </form>
    </div>

    <div id="postsContainer"></div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>

  <script>
    document.getElementById('postForm').addEventListener('submit', function(event) {
      event.preventDefault();

      const title = document.getElementById('title').value;
      const body = document.getElementById('body').value;
      const photoFile = document.getElementById('photo').files[0];

      if (photoFile) {
        uploadImageToCloudinary(photoFile)
          .then(photoURL => {
            savePost(title, body, photoURL);
          })
          .catch(error => {
            console.error('Error uploading image:', error);
          });
      } else {
        savePost(title, body, '');
      }
    });

    function uploadImageToCloudinary(file) {
      const cloudName = 'Ydzz0ng826'; // Replace with your Cloudinary cloud name
      const uploadPreset = 'Krishisahyog'; // Replace with your Cloudinary upload preset
      const url = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;

      const formData = new FormData();
      formData.append('file', file);
      formData.append('upload_preset', uploadPreset);

      return axios.post(url, formData)
        .then(response => response.data.secure_url)
        .catch(error => {
          throw new Error('Image upload failed');
        });
    }

    function savePost(title, body, photoURL) {
      const formData = { title, body, photo: photoURL };

      fetch('https://krishisahyog.onrender.com/api/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        fetchPosts(); // Fetch posts again after successful submission
        document.getElementById('postForm').reset(); // Optionally reset form
      })
      .catch(error => {
        console.error('Error:', error);
        // Handle error gracefully
      });
    }

    function fetchPosts() {
      fetch('https://krishisahyog.onrender.com/api/posts')
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(posts => {
          const postsContainer = document.getElementById('postsContainer');
          postsContainer.innerHTML = '';

          posts.forEach(post => {
            const postElement = document.createElement('div');
            postElement.className = 'post';
            postElement.innerHTML = `
              <h2>${post.title}</h2>
              <p>${post.body}</p>
              ${post.photo ? `<img src="${post.photo}" alt="Post Image">` : ''}
              <button onclick="likePost('${post._id}')" class="like-button">❤️(${post.likes})</button>
            `;
            postsContainer.appendChild(postElement);
          });
        })
        .catch(error => {
          console.error('Error:', error);
          // Handle error gracefully
        });
    }

    function likePost(postId) {
      fetch(`https://krishisahyog.onrender.com/api/posts/${postId}/like`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ action: 'like' })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        fetchPosts(); // Fetch posts again after successful like
      })
      .catch(error => {
        console.error('Error:', error);
        // Handle error gracefully
      });
    }

    document.addEventListener('DOMContentLoaded', fetchPosts);
  </script>
</body>
